#include <bits/stdc++.h>
#include <iostream>

#define endl '\n'
#define f(i,s,k) for(ll i=s;i<k;i++)
#define f1(i,n,s) for(ll i=n;i>=s;i--)
#define pb push_back
#define fi first
#define se second

typedef long long  ll;

const ll INF = 4e9+5;
const int N =2*1e5+10;
const ll MOD = 1e9+7  ;
const double Pi=acos(-1);


using namespace std;


//tri binaire (du bas vers le haut)
// complexit√© log2(n)
// build o(N);
//query O(N);
// update O(1);

ll n,q;
string tree[4*N];
string a[N];
string mrg(string x,string y){
    //modifier cette fonction seulement
    string z=x+y;
    return z;
}

void build(int id=0,int ns=0,int ne=n-1){
    if (ns==ne){
        tree[id]=a[ns];
        return ;
    }
    int l=2*id+1;
    int r=l+1;
    int md=ns+(ne-ns)/2;
    build(l,ns,md);
    build(r,md+1,ne);
    tree[id]=mrg(tree[l],tree[r]);
}
string query(int qs,int qe,int id=0,int ns=0,int ne=n-1){
    //cout<<"id"<<id<<endl;
    if (ns>qe || qs>ne)
        return ""; //infinity
    if (qs<=ns && qe>=ne){
    //    cout<<"id"<<id<<endl;
        return tree[id];
    }
    int l=2*id+1;
    int r=l+1;
    int md=ns+(ne-ns)/2;
    return mrg(query(qs,qe,l,ns,md),query(qs,qe,r,md+1,ne));
}



//changer une valeur
void upd(int pos,string val,int id=0,int ns=0,int ne=n-1){
    if (ns>pos || pos>ne)
        return ;
    if (ns==ne){
        tree[id]=val;
        return ;
    }
    int l=2*id+1;
    int r=l+1;
    int md=ns+(ne-ns)/2;
    upd(pos,val,l,ns,md);
    upd(pos,val,r,md+1,ne);
    tree[id]=mrg(tree[l],tree[r]);
}





void solve(){
    ll n,k,b,s;
    cin>>n>>k>>b>>s;
    ll j;
    for (j=0;j<n;j++){
        if ((s-(k-1)*j)/k==b){
            break;
        }
    }
    if (j==n){
        cout<<-1<<endl;
        return;
    }
    for (ll i=0;i<n-j-1;i++)
        cout<<0<<" ";
    for (ll i=0;i<j;i++)
        cout<<k-1<<" ";
    cout<<s-(k-1)*j<<endl;
}



int main(){

	#ifndef ONLINE_JUDGE
  //  freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);
    #endif

    ios_base::sync_with_stdio(false);cin.tie(NULL);
    int t=1;
    cin >> t ;
    while(t--){
    	//cout << "ahla" << endl;
        solve();
    }
    return 0;
}
