#include <bits/stdc++.h>
#include <cstring>
#include <math.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double db;
//typedef double db;
#define ss second
#define ff first
#define pb push_back
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define v vector<pll>
#define pll pair<ll,ll>
#define vll vector<ll>
#define vd vector<db>
#define pdd  pair<db,db>
#define vdd  vector<pdd>
#define mll map <ll,ll>
#define sl set <ll>
#define sll set <pll>
#define f(i,j,k,l) for(ll i=j;i<k;i+=l)
#define fj(j,m) for(auto j=m.begin();j!=m.end();++j)
#define mp make_pair
#define endl "\n"
const db pi=3.14159265359;
const int MOD = 1e9+7;
const db EPS = 0.000000001; // 1 e -9
const ll inf = (ll)1e18;
ll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;}
ll lcm(ll a , ll b) {return (a * b) / gcd(a , b);}
void yes(){
    cout<<"YES"<<endl;
}
void no(){
    cout<<"NO"<<endl;
}








int mul(const int& a, const int& b){ return 1ll*a*b%MOD; } //
    int add(const int& a, const int& b){ return (a+b>=MOD)?a+b-MOD:a+b; }
    int sub(const int& a, const int& b){ return (a-b<0)?a-b+MOD:a-b; }
    int inv(int x){
		int res = 1, y = MOD-2;
		while(y>0){
			if(y&1) res = mul(res,x);
			y >>= 1, x = mul(x,x);
		}
			return res;
	}
	int power(int x,  int y) //power(x,y)%MOD
	{
		if (y == 0)
			return 1;
		int p = power(x, y / 2) % MOD;
		p = (p * p) % MOD;

    return (y % 2 == 0) ? p : (x * p) % MOD;
}

//tri binaire (du bas vers le haut)
// complexit√© log2(n)
// build o(N);
//query O(N);
// update O(1);


ll a[100005];
ll fct(ll r1,ll c1,ll r2){
    ll c2=c1;
    //cout<<c2<<endl;
    for (ll j=min(r2-1,r1-1);j<=max(r2-1,r1-1);j++){
        c2=min(c2,a[j]+1);
        //cout<<r1<<" "<<j+1<<" "<<c2<<endl;
    }
   // if(a[r2-1]+1<c1) c2=a[r2+1]+1;
    return c2;
}


void solve() {
    ll n;
    cin>>n;
    for (ll i=0;i<n;i++){
        cin>>a[i];
    }
    ll x1,y1,x2,y2;
    cin>>x1>>y1>>x2>>y2;
    ll c[n];
    for (ll i=0;i<n;i++){
        ll c3=fct(x1,y1,i+1);
        c[i]=abs(x1-1-i)+abs(x2-1-i)+abs(fct(i+1,c3,x2)-y2);
        //cout<<c[i]<<" up "<<" "<<abs(x1-1-i)<<" down "<<abs(x2-1-i)<<" diff "<<abs(c3-fct(i+1,c3,x2))<<endl;
        //cout<<"c3 "<<c3<<" other "<<fct(i+1,c3,x2)<<endl;
    }
    for (ll i=0;i<n;i++){
        //cout<<c[i]<<endl;
    }
    ll res=1e9;
    for (ll i=0;i<n;i++) res=min(res,c[i]);
    cout<<res<<endl;






}









int main()
{
    ios_base::sync_with_stdio(false);cin.tie(nullptr);
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
  /* for (ll i=1;i<100005;i++){
    pre[i]=1;
   }
   pre[1]=0;
   premier(100001);
   for (ll i=1;i<10000005;i++){
    if (pre[i]) h.pb(i);
   }*/
 /*  fact[1]=1;
   fact[0]=1;
   for (ll i=2;i<=200002;i++){
    fact[i]=fact[i-1]*i;
   }*/
    int t=1;
    //cin>>t;
    for(int i=0;i<t;i++){
        solve();
    }

return 0;
}
