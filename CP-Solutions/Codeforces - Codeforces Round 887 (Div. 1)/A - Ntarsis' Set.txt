//  ॐ नमः शिवाय //
#include <bits/stdc++.h>
#include <iomanip>
#define int int64_t
#define vi vector<int>
#define vii vector<pair<int, int>>
#define vs vector<string>
#define vc vector<char>
#define vb vector<bool>
#define pb push_back
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define vin(x, v)     \
    for (auto &x : v) \
        cin >> x;
#define vout(x, v)   \
    for (auto x : v) \
        cout << x << " ";
#define MEM(a, b) memset(a, (b), sizeof(a))
#define forl for (int i = 0; i < n; i++)
#define loop(i, j, k) for (int i = j; i < k; i += 1)
#define rloop(i, j, k) for (int i = j; i >= k; i -= 1)
#define MP make_pair
#define endl "\n"
#define INF (int)1e18
#define EPS 1e-18
#define PI 3.1415926535897932384626433832795
#define MOD 1000000007
#define MODD 998244353
#define isortarr(arr, n) sort(arr, arr + n)
#define dsortarr(arr, n) sort(arr, arr + n, greater<int>())
#define isortvect(v) sort(v.begin(), v.end())
#define dsortvect(v) sort(v.begin(), v.end(), greater<>());
#define isortstrng(str) sort(str.begin(), str.end())
#define dsortstrng(str) sort(str.begin(), str.end(), greater<char>())
#define ltransfr(str) transform(str.begin(), str.end(), str.begin(), ::tolower)
#define utransfr(str) transform(str.begin(), str.end(), str.begin(), ::toupper)
#define ct(x) cout << x
#define cn(x) cin >> x
#define deb(x) cout << #x << " = " << x << endl
#define debb(x, y) cout << #x << " = " << x << " , " << #y << " = " << y << endl
#define cp(t) \
    int t;    \
    cin >> t; \
    while (t--)
// srand(time(0));
// x = rand()%XYZ
//  cout<<fixed<<setprecision(15)<<
using namespace std;
int zero = 0;
int nxtn()
{
    int x;
    cin >> x;
    return x;
}

string nxts()
{
    string x;
    cin >> x;
    return x;
}

void printYesNo(bool f, string s1, string s2)
{
    if (f)
        cout << s1 << endl;
    else
        cout << s2 << endl;
}

bool chk(int mid, vi &ar, int k)
{
    int n = ar.size();
    int tot = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        if (mid < ar[i])
            continue;
        int x = (mid - ar[i]) / (i + 1);
        x++;
        tot += x;
        mid -= x * (i + 1);
        if (mid < 0)
            return false;
    }
    return tot > k;
}

signed main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cp(t)
    {
        int n, k;
        cin >> n >> k;
        vi ar(n);
        vin(x, ar);
        if (ar[0] != 1)
        {
            cout << 1 << endl;
            continue;
        }
        int s = 1, e = 1e12;
        int ans = 0;
        while (s <= e)
        {
            int mid = (s + e) / 2;
            if (chk(mid, ar, k))
            {
                ans = mid;
                e = mid - 1;
            }
            else
                s = mid + 1;
        }
        cout << ans << endl;
    }

    return 0;
}