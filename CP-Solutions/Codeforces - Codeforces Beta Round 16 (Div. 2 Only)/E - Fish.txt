#include <bits/stdc++.h>

#define endl '\n'
#define f(i,s,n) for(int i=s;i<n;i++)
#define f1(i,n,s) for(int i=n;i>=s;i--)
#define pb push_back
#define fi first
#define se second

typedef long long ll;

const ll INF = 4e9+5;

const int N =3*1e5+7;
const int MOD = 1e9+7  ;
using namespace std;
ll pi=3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679;
bool vis[N];
double a[100][100];


ll printNcR(int n, int r)
{
    if (r > n) return 0;
    if (r * 2 > n) r = n-r;
    if (r == 0) return 1;
    // p holds the value of n*(n-1)*(n-2)...,
    // k holds the value of r*(r-1)...
    long long p = 1, k = 1;

    // C(n, r) == C(n, n-r),
    // choosing the smaller value
    if (n - r < r)
        r = n - r;

    if (r != 0) {
        while (r) {
            p *= n;
            k *= r;

            // gcd of p, k
            long long m = __gcd(p, k);

            // dividing by gcd, to simplify
            // product division by their gcd
            // saves from the overflow
             p /= m;
            k /= m;

            n--;
            r--;
        }

        // k should be simplified to 1
        // as C(n, r) is a natural number
        // (denominator should be 1 ) .
    }

    else
        p = 1;

    // if our approach is correct p = ans and k =1
    return p;
}



double cnt_proba(ll i,ll k,ll x){
    double tot=0;
    double cnt=1;
    for (ll j=0;(1<<j)<=i;j++){
        if (((1<<j) & k )&&((1<<j) & i)){
            tot+=a[j][x];
            cnt++;
           // cout<<k<<" "<<" "<<x<<" "<<(j)<<" "<<a[j][x]<<endl;
        }
    }
    if (cnt>=2)
    tot=tot/printNcR(cnt,2);
    //cout<<tot<<" "<<cnt<<endl;
    return tot;
}


void solve(){
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.precision(6);
    ll n;
    cin>>n;
    for (ll i=0;i<n;i++){
        for (ll j=0;j<n;j++){
            cin>>a[i][j];
        }
    }
    ll maxi=(1<<(n));
    maxi--;
    double dp[maxi+10];
    //cout<<maxi<<endl;
    memset(dp,0,sizeof(dp));
    dp[maxi]=1;
    for (ll i=maxi;i>=0;i--){
        for (ll j=0;(1<<j)<=i;j++){
            if ((1<<j) & i){
                ll k=i-(1<<j);
             //   cout<<dp[k]<<" ";
               // cout<<"k"<<i<<" "<<(1<<j)<<" "<<k<<endl;
                dp[k]+=(cnt_proba(i,k,j)*dp[i]);
              //  cout<<cnt_proba(i,k,j)<<" "<<dp[k]<<endl;
              //  cout<<k<<" "<<cnt_proba(i,k)<<endl;
            }
        }
    }
   // for (ll i=0;i<=maxi;i++)
   // cout<<dp[i]<<" ";
    for (ll i=0;(1<<i)<=maxi;i++){
        if (dp[(1<<i)]<0.000001)
            cout<<0<<" ";
        else
        cout<<dp[(1<<i)]<<" ";
    }
}




int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.precision(6);
  //  freopen("ghanophobia.in","r",stdin);
    int t=1;
   // cin>>t;
    while(t--){
            solve();
    }
return 0;
}
