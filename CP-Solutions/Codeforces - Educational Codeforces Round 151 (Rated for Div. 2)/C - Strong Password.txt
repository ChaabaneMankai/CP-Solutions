#include <bits/stdc++.h>
#include <cstring>
#include <math.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double db;
//typedef double db;
#define ss second
#define ff first
#define pb push_back
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define v vector<pll>
#define pll pair<ll,ll>
#define vll vector<ll>
#define vd vector<db>
#define pdd  pair<db,db>
#define vdd  vector<pdd>
#define mll map <ll,ll>
#define sl set <ll>
#define sll set <pll>
#define f(i,j,k,l) for(ll i=j;i<k;i+=l)
#define fj(j,m) for(auto j=m.begin();j!=m.end();++j)
#define mp make_pair
#define endl "\n"
const db pi=3.14159265359;
const int mod = 998244353;
const db EPS = 0.000000001; // 1 e -9
const ll inf = (ll)1e18;
ll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;}
ll lcm(ll a , ll b) {return (a * b) / gcd(a , b);}
void yes(){
    cout<<"YES"<<endl;
}
void no(){
    cout<<"NO"<<endl;
}

string s, l, r;
int m, n;

void solve() {
    cin>>s>>m;
	cin>>l>>r;
	n = s.size();

	bool test = false;
	int i = 0;
	for(int j=0;j<m;j++)
	{
		vector<bool> vis(10, false);
		int cnt = r[j]-l[j]+1;
	//	cout<<"cnt "<<cnt<<endl;
		while(cnt>0)
		{
	//		cout<<"cnt: "<<cnt<<" "<<i<<" "<<s[i]<<" "<<l[j]<<" "<<r[j]<<endl;
			if(vis[s[i]-'0'])
			{
				i++;
			}
			else if(s[i]>=l[j]&&s[i]<=r[j])
			{
				vis[s[i]-'0'] = 1;
				cnt--;
				i++;
			}
			else i++;
	//		cout<<cnt<<endl;
			if(i>=n&&(cnt!=0||j<m-1))
			{
		//		cout<<"true: "<<i<<" "<<cnt<<" "<<j<<endl;
				test = true;
				break;
			}
			//cout<<cnt<<" "<<i<<endl;
		}
	//	cout<<"after while: "<<i<<endl;
		if(test == true)
			break;
	}
	if(test)
		yes();
	else
		no();










}










int main()
{
    ios_base::sync_with_stdio(false);cin.tie(nullptr);
   // freopen("input.txt","r",stdin);
   // freopen("out.txt","w",stdout);
  /* for (ll i=1;i<100005;i++){
    pre[i]=1;
   }
   pre[1]=0;
   premier(100001);
   for (ll i=1;i<105;i++){
    if (pre[i]) h.pb(i);
   }*/
    int t=1;
    cin>>t;
    for(int i=0;i<t;i++){
        solve();
    }

return 0;
}
