#include <bits/stdc++.h>
#include <cstring>
#include <math.h>
using namespace std;
typedef int ll;
typedef unsigned long long ull;
typedef long double db;
//typedef double db;
#define ss second
#define ff first
#define pb push_back
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define vl vector<ll>
#define pll pair<ll,ll>
#define vll vector<pll>
#define vd vector<db>
#define pdd  pair<db,db>
#define vdd  vector<pdd>
#define mll map <ll,ll>
#define sl set <ll>
#define sll set <pll>
#define f(i,j,k,l) for(ll i=j;i<k;i+=l)
#define fj(j,m) for(auto j=m.begin();j!=m.end();++j)
#define endl "\n"
const db pi=3.14159265359;
const int mod = 998244353;
const db EPS = 0.000000001; // 1 e -9
const ll inf = (ll)1e18;
ll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;}
ll lcm(ll a , ll b) {return (a * b) / gcd(a , b);}
void yes(){
    cout<<"YES"<<endl;
}
void no(){
    cout<<"NO"<<endl;
}
ll n,k;

bool chk(int mid, vi &ar, int k)
{
    int n = ar.size();
    int tot = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        if (mid < ar[i])
            continue;
        int x = (mid - ar[i]) / (i + 1);
        x++;
        tot += x;
        mid -= x * (i + 1);
        if (mid < 0)
            return false;
    }
    return tot > k;
}

void solve() {
   ll n,m;
   cin>>n>>m;
   string s;
   cin>>s;
   ll par1[n],par2[n];
   for (ll i=0;i<n;i++){
    par1[i]=i;
    par2[i]=i;
   }
   for (ll i=1;i<n;i++){
    if(s[i-1]=='0') par1[i]=par1[i-1];
   }
   for (ll i=n-2;i>=0;i--){
    if(s[i+1]=='1') par2[i]=par2[i+1];
   }
   set<pll> k;
   for (ll i=0;i<n-1;i++){
    k.insert(make_pair(i,i));
    if (s[i]=='0' && s[i+1]=='1')
    k.insert(make_pair(par1[i],par2[i+1]));
   }
   f(i,0,n,1){
   if (s[i]=='0')
    k.insert(make_pair(par1[i],i));
    if (s[i]=='1')
    k.insert(make_pair(i,par2[i]));
   }
   //for (ll i=0;i<n;i++) cout<<par2[i]<<" ";
   set<pll> h;
   while (m--){
    ll l,r;
    cin>>l>>r;
    l--;r--;
    pll e=make_pair(par1[l],par2[r]);
    if (k.find(e)!=k.end()){
        h.insert(make_pair(r,r));
       // cout<<"y";
    }
    else
    h.insert(make_pair(par1[l],par2[r]));
  //  cout<<par1[l]<<" "<<par2[r]<<endl;

   }
   ll cnt=0;
   for (auto i:h){
    if (i.first==i.second) cnt++;
   }
   ll e=h.size();
   e-=cnt;
   cnt=min(cnt,1);
    cout<<e+cnt<<endl;
   //for (auto i:h){
    //cout<<i.first<<" "<<i.second<<endl;
   //}




}










int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.precision(30);
   // freopen("input.txt","r",stdin);
   // freopen("out.txt","w",stdout);
  /* for (ll i=1;i<100005;i++){
    pre[i]=1;
   }
   pre[1]=0;
   premier(100001);
   for (ll i=1;i<105;i++){
    if (pre[i]) h.pb(i);
   }
   sort(h.begin(),h.end(),greater<ll>());*/
    int t=1;
    cin>>t;
    for(int i=0;i<t;i++){
        solve();
    }

return 0;
}
