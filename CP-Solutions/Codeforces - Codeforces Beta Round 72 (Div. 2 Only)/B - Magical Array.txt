#include <bits/stdc++.h>
#include <cstring>
#include <math.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double db;
//typedef double db;
#define ss second
#define ff first
#define pb push_back
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define pll pair<ll,ll>
#define vll vector<ll>
#define vd vector<db>
#define pdd  pair<db,db>
#define vdd  vector<pdd>
#define mll map <ll,ll>
#define sl set <ll>
#define sll set <pll>
#define f(i,j,k,l) for(ll i=j;i<k;i+=l)
#define fj(j,m) for(auto j=m.begin();j!=m.end();++j)
#define mp make_pair
#define endl "\n"
const db pi=3.14159265359;
const int MOD = 1e9+7;
const db EPS = 0.000000001; // 1 e -9
const ll inf = (ll)1e18;
ll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;}
ll lcm(ll a , ll b) {return (a * b) / gcd(a , b);}
void yes(){
    cout<<"YES"<<endl;
}
void no(){
    cout<<"NO"<<endl;
}



ll parent[10000005];
void make_set(int v) {
    parent[v] = v;
}


int find_set(int v) {
    if (v == parent[v])
        return v;
    return parent[v] = find_set(parent[v]);
}


void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if (a != b) {
        if (a> b)
            swap(a, b);
        parent[b] = a;
    }
}

vector<ll> st(vector<ll> p){
    vector<ll> h;
    ll a[p.size()];
    for (ll i=0;i<p.size();i++) a[i]=1;
    for (ll i=1;i<p.size();i++){
        if(p[i]==p[i-1]) a[i]=a[i-1]+1;
    }
    for (ll i=p.size()-2;i>=0;i--){
        if(p[i]==p[i+1]){
            a[i]=a[i+1];
        }
    }
    for (ll i=0;i<p.size();i++){
        if(a[i]<=2) h.pb(p[i]);
    }
    return h;
}
void solve() {
    ll n;
    cin>>n;
    ll a[n];
    for (ll i=0;i<n;i++){
        cin>>a[i];
    }
    ll b[n];
    for (ll i=0;i<n;i++) b[i]=1;
    for (ll i=1;i<n;i++){
        if (a[i]==a[i-1]) b[i]=b[i-1]+1;
    }
    ll cnt=n;
    /*for (ll i=0;i<n;i++){
        cout<<b[i]<<" ";
    }
    cout<<endl;*/
    for (ll i=1;i<n;i++){
        if(a[i]!=a[i-1]){
            cnt+=(b[i-1]*(b[i-1]-1))/2;
        }
        //cout<<cnt<<endl;
    }
    cnt+=(b[n-1]*(b[n-1]-1))/2;
    cout<<cnt<<endl;
}









int main()
{
    ios_base::sync_with_stdio(false);cin.tie(nullptr);
   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);
  /* for (ll i=1;i<100005;i++){
    pre[i]=1;
   }
   pre[1]=0;
   premier(100001);
   for (ll i=1;i<10000005;i++){
    if (pre[i]) h.pb(i);
   }*/
 /*  fact[1]=1;
   fact[0]=1;
   for (ll i=2;i<=200002;i++){
    fact[i]=fact[i-1]*i;
   }*/
    int t=1;
    //cin>>t;
    for(int i=0;i<t;i++){
        solve();
    }

return 0;
}
